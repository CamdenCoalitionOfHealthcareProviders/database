install.packages("dplyr")
install.packages("ggplot2")
install.packages("rvest")
?read.csv
?require
Sys.time()
install.packages(gtools)
install.packages("gtools")
?rename
install.packages("reshape")
flights
library(nycflights13)
library("datasets", lib.loc="C:/Program Files/R/R-3.2.2/library")
flights
nycflights13
library(nycflights13)
mycars
mtcars
names(mtcars)
rename(mtcars, c(mpg = "MilesPerGallon"), c(cyl = "Cylinders"))
library(reshape)
rename(mtcars, c(mpg = "MilesPerGallon"), c(cyl = "Cylinders"))
rename(mtcars, c(mpg = "MilesPerGallon", cyl = "Cylinders"))
file <- read.csv("Y:\Daily Import Files\daily import 010416")
file <- read.csv('Y:\Daily Import Files\daily import 010416')
file <- read.csv('Y:\Daily Import Files\\ndaily import 010416')
file <- read.csv('Y:/Daily Import Files/daily import 010416')
file <- read.csv('C:/Daily Import Files/daily import 010416')
file <- read.csv('C:/Desktop/daily import 010416')
file <- read.csv('C:/Users/jfisher/Desktop/daily import 010416')
setwd("~/")
setwd('C:/Users/jfisher/')
wd()
getwd()
setwd('C:/Users/jfisher/My Documents/')
getwd()
file <- read.csv('ACO-Utilizations.xls')
file <- read.csv('C:/Users/jfisher/My Documents/ACO-Utilizations.csv')
head(file)
file <- read.csv('C:/Users/jfisher/My Documents/ACO-Utilizations.csv', stringsAsFactors = F)
head(file)
file2 <- read.csv(file = 'Y:\Daily Import Files\Acosta Ramon.csv')
file2 <- read.csv(file = 'Y:/Daily Import Files/Acosta Ramon.csv')
head(file2)
source('C:/Users/jfisher/Desktop/update_utilizations.R', echo=TRUE)
rm(file)
rm(file2)
colnames(luke)
colnames(Amb)
rbind(Amb,AR,cam,fairview,Fam,kylewill,Lourdes,luke,phope,Phys,reliance)
colnames(uhi)
colnames(phope)
rbind(Amb,AR,cam,fairview,Fam,kylewill,Lourdes,luke,phope,Phys,reliance)
unified <- read.csv(file = 'Y:/Daily Import Files/Unified Report.csv', stringsAsFactors=FALSE)
colnames(unified)
source('C:/Users/jfisher/Desktop/update_utilizations.R', echo=TRUE)
rm(unified)
colnames(aco2)
acoUtilization <- rename(acoUtilization, c(Patient.ID="HIE Import Link"))
acoUtilization <- rename(acoUtilization, c(Admit.Date="AdmitDate"))
acoUtilization <- rename(acoUtilization, c(Patient.Class="PatientClass"))
acoUtilization <- rename(acoUtilization, c(Adm.Diagnoses="HistoricalDiagnosis"))
acoUtilization <- rename(acoUtilization, c(Inp..6mo.="Inp6mo"))
acoUtilization <- rename(acoUtilization, c(ED..6mo.="ED6mo"))
head(acoUtilization)
tv1 <- read.csv(file = 'Y:/Daily Import Files/daily import 123115/aco utilizations mid import 123115/all_records_all_fields_2015-12-31_1_of_4', stringsAsFactors=FALSE)
tv2 <- read.csv(file = 'Y:/Daily Import Files/daily import 123115/aco utilizations mid import 123115/all_records_all_fields_2015-12-31_2_of_4', stringsAsFactors=FALSE)
tv3 <- read.csv(file = 'Y:/Daily Import Files/daily import 123115/aco utilizations mid import 123115/all_records_all_fields_2015-12-31_3_of_4', stringsAsFactors=FALSE)
tv4 <- read.csv(file = 'Y:/Daily Import Files/daily import 123115/aco utilizations mid import 123115/all_records_all_fields_2015-12-31_4_of_4', stringsAsFactors=FALSE)
tv1 <- read.csv(file = 'Y:/Daily Import Files/daily import 123115/aco utilizations mid import 123115/all_records_all_fields_2015-12-31_1_of_4.csv', stringsAsFactors=FALSE)
tv2 <- read.csv(file = 'Y:/Daily Import Files/daily import 123115/aco utilizations mid import 123115/all_records_all_fields_2015-12-31_2_of_4.csv', stringsAsFactors=FALSE)
tv3 <- read.csv(file = 'Y:/Daily Import Files/daily import 123115/aco utilizations mid import 123115/all_records_all_fields_2015-12-31_3_of_4.csv', stringsAsFactors=FALSE)
tv4 <- read.csv(file = 'Y:/Daily Import Files/daily import 123115/aco utilizations mid import 123115/all_records_all_fields_2015-12-31_4_of_4.csv', stringsAsFactors=FALSE)
tv_export <- rbind(tv1, tv2, tv3, tv4)
colnames(tv_export
)
colnames(acoUtilization)
merge(acoUtilization, tv_export, by("HIE.Import.Link", "HIE Import Link"))
merge(tv_export, acoUtilization, by.x = "HIE.Import.Link", by.y = "HIE Import Link"))
merge(tv_export, acoUtilization, by.x = "HIE.Import.Link", by.y = "HIE Import Link")
x < - merge(tv_export, acoUtilization, by.x = "HIE.Import.Link", by.y = "HIE Import Link")
x <- merge(tv_export, acoUtilization, by.x = "HIE.Import.Link", by.y = "HIE Import Link")
head(x)
colnames(tv_export)
tail(x)
data.class(x)
tail(x)
colnames(x)
y <- merge(tv_export, acoUtilization, by"HIE.Import.Link")
y <- merge(tv_export, acoUtilization, by("HIE.Import.Link"))
y <- merge(tv_export, acoUtilization, by = "HIE.Import.Link")
y <- merge(tv_export, acoUtilization, by.x = "HIE.Import.Link")
x["AdmitDate.x"]
grep("Dec", x["AdmitDate.x"])
grepl("Dec", x["AdmitDate.x"])
subset(x, AdmitDate.x = "Dec")
subset(x, AdmitDate.x = "Dec 15 2015")
subset(x, AdmitDate.x = Dec 15 2015, select = HIE.Import.Link)
subset(x, AdmitDate.x = 'Dec 15 2015', select = HIE.Import.Link)
subset(x, AdmitDate = 'Dec 15 2015', select = HIE.Import.Link)
head(x)
subset(x, AdmitDate.x = 'Dec 15 2015', select = HIE.Import.Link)
subset(x, AdmitDate.x == 'Dec 15 2015', select = HIE.Import.Link)
subset(x, AdmitDate.x >= 'Dec 15 2015', select = HIE.Import.Link)
subset(x, AdmitDate.x == 'Dec 15 2015', select = HIE.Import.Link)
class(AdmitDate.x)
class(x[AdmitDate.x])
str(x)
utilization <- read.csv(file = 'Y:/Daily Import Files/ACO-Utilizations.csv', stringsAsFactors=FALSE)
head(utilization)
library("dplyr", lib.loc="~/R/win-library/3.2")
library("dplyr")
filter(utilization, ED6mo <= 4, PatientClass == E)
utilization$PatientClass
filter(utilization, ED6mo <= 4, PatientClass == "E")
ED <- filter(utilization, ED6mo <= 4, PatientClass == "E")
head(ED)
x <- utilization[-ED]
x <- utilization[,-ED]
utilization[!ED]
utilization <- ED <- NULL
utilization <- read.csv(file = 'Y:/Daily Import Files/ACO-Utilizations.csv', stringsAsFactors=FALSE)
ED <- filter(utilization, ED6mo <= 4, PatientClass == "E")
1957-1563
utilization %>% filter(utilization, ED6mo <= 4, PatientClass == "E")
str(utlization$PatientClass)
str(utilization$PatientClass)
list(utilization$PatientClass)
filter(utilization, ED6mo >= 4, PatientClass == "I")
filter(utilization, ED6mo >= 5, PatientClass == "I")
filter(utilization, ED6mo >= 5, PatientClass != "E")
filter(utilization, ED6mo >= 5, PatientClass == "I")
filter(utilization, ED6mo <= 4, PatientClass == "E")
ED <- filter(utilization, ED6mo <= 4, PatientClass == "E")
list(ED$PatientClass)
list(ED$ED6mo)
x <- filter(utilization, ED6mo >= 5, PatientClass == "I")
y <- filter(utilization, ED6mo >= 5, PatientClass != "I")
y <- filter(utilization, ED6mo >= 5, PatientClass != "E") # 238 rows
z <- filter(utilization, ED6mo > 4, PatientClass == "I")
filter(utilization, ED6mo < 5 | PatientClass == "E")
filter(utilization, ED6mo < 5 || PatientClass == "E")
filter(utilization, ED6mo <= 4 & PatientClass == "E")
list(ED$ED6mo)
list(ED$PatientClass)
list(utilization$PatientClass)
filter(utilization, PatientClass == "E" | PatientClass == "I")
filter(utilization, ED6mo > 4, PatientClass != "E")
utlization[-ED]
utilization[-ED]
utilization[-c(ED)]
subset(utilization, ED6mo <= 4, PatientClass == "E")
subset(utilization, ED6mo <= 4)
subset(utilization, ED6mo <= 4) %>% subset (PatientClass == "E")
filter(utilization, ED6mo <= 4)
filter(utilization, ED6mo <= 4) %>% filter(PatientClass == "E")
1957-1563
str(utilization)
filter(utilization, ED6mo > 4, PatientClass != "E")
head(utilization)
tail(utilization)
View(ED)
View(utilization)
filter(utilization, ED6mo >= 5)
View(utilization)
utilization <- read.csv(file = 'Y:/Daily Import Files/ACO-Utilizations.csv', stringsAsFactors=FALSE)
ED <- filter(utilization, ED6mo <= 4, PatientClass == "E") # 1563 rows
1972-1580
filter(utilization, ED6mo >= 5, PatientClass != "E")
View(ED)
filter(utilization, ED6mo > 4)
str(filter(utilization, ED6mo > 4))
str(utilization$PatientClass)
list(utilization$PatientClass)
filter(utilization, ED6mo > 4)
filter(utilization, ED6mo > 4, PatientClass != "E")
z <- filter(utilization, ED6mo > 4, PatientClass != "E") # 28 rows
x <- filter(utilization, ED6mo > 4, PatientClass != "E") # 28 rows
tv <- read.csv(file = 'Y:/Daily Import Files/aco_utilizations_data_import_check_mh_2016-01-05_1.csv', stringsAsFactors=FALSE)
str(tv)
rm(z)
str(x)
as.Date(tv$DischargeDate)
as.Date(tv$DischargeDate, "%m/%d/%Y")
tv <- read.csv(file = 'Y:/Daily Import Files/aco_utilizations_data_import_check_mh_2016-01-05_1.csv', stringsAsFactors=FALSE)
str(tv)
inner_join(x, tv, by = HIE.Import.Link
)
inner_join(x, tv)
left_join(x, tv)
inner_join(x, tv, by = c("HIE.Import.Link", "AdmitDate", "Facility", "PatientClass", "DischargeDate", "Inp6mo", "ED6mo"))
subset(utilization, ED6mo>4 &&PatientClass!="E")
subset(utilization, ED6mo > 4 && PatientClass!= "E")
filter(utilization, ED6mo >= 4, PatientClass != "E")
filter(utilization, ED6mo < 4, PatientClass != "I")
filter(utilization, ED6mo >= 4)
filter(utilization, ED6mo > 4)
filter(utilization, PatientClass = "E")
filter(utilization, PatientClass == "E")
head(filter(utilization, PatientClass == "E"))
y <- filter(utilization, ED6mo >= 4) # 262 rows
# PatientClass not E
z <- filter(utilization, PatientClass == "E") # 1814 rows
inner_join(y, z)
y <- filter(utilization, ED6mo > 4) # 262 rows
count(y)
inner_join(y, z)
z <- filter(utilization, PatientClass != "E") # 1814 rows
inner_join(y, z)
inner_join(utilization, tv)
left_join(utilization, tv)
right_join(utilization, tv)
y <- filter(utilization, ED6mo <= 4) # 262 rows
z <- filter(utilization, PatientClass == "E") # 158 rows
inner_join(y, z)
inner_join(y, z)
outer_join(y, z)
merge(y, z, by = "HIE.Import.Link", all = T)
anti_join(y, z)
inner_join(y, z)
semi_join(y, z)
filter(utilization, ED60mo > 4)
filter(utilization, ED6mo > 4)
s <- filter(utilization, ED60mo > 4)
s <- filter(utilization, ED6mo > 4)
str(s)
str(s$PatientClass)
list(s$PatientClass)
1972-1580
filter(utilization, ED)
filter(utilization, ED6mo >5)
u <- read.csv(file = 'Y:/Daily Import Files/ACO-Utilizations.csv', stringsAsFactors=FALSE)
rm(utilization)
ED <- filter(u, ED6mo <= 4, PatientClass == "E") # 1580 rows
ED
filter(u, ED6mo > 4)
filter(u, c(PatientClass == E | PatientClass == I), ED6mo > 4)
filter(u, c(PatientClass == "E" | PatientClass == "I"), ED6mo > 4)
rm(c(x, y, z))
mutate(u, delete = ED)
AllPayers <- read.csv("Y:/test-practice.csv", sep = "", header = T, stringsAsFactors = F)
AllPayers <- read.csv("Y:/test-practice.csv", sep = "", stringsAsFactors = F)
AllPayers <- read.csv("Y:/test-practice.csv", stringsAsFactors = F)
head(AllPayers)
AllPayers$PRACTICE_TEST <- NA
head(AllPayers)
AllPayers$PRACTICE_TEST[AllPayers$VEND_FULL_NAME =="ACOSTA RAMON"] <- "Acosta"
AllPayers$PRACTICE_TEST[AllPayers$VEND_FULL_NAME =="RELIANCE BROADWAY_CAMDEN"] <- "Reliance Broadway"
AllPayers$PRACTICE_TEST[AllPayers$VEND_FULL_NAME =="RELIANCE BROADWAY_PENNSAUKEN"] <- "Reliance Pennsauken"
AllPayers$PRACTICE_TEST[AllPayers$VEND_FULL_NAME =="CAMCARE HEALTH CORPORATION"] <- "CAMCare"
AllPayers$PRACTICE_TEST[AllPayers$VEND_FULL_NAME =="COOPER AMBULATORY PEDIATRICS"] <- "Cooper Pediatrics"
AllPayers$PRACTICE_TEST[AllPayers$VEND_FULL_NAME =="COOPER FAMILY MEDICINE"] <- "Cooper Family"
AllPayers$PRACTICE_TEST[AllPayers$VEND_FULL_NAME =="COOPER FAMILY MEDICINE PC"] <- "Cooper Family"
AllPayers$PRACTICE_TEST[AllPayers$VEND_FULL_NAME =="COOPER PEDIATRICS"] <- "Cooper Pediatrics"
AllPayers$PRACTICE_TEST[AllPayers$VEND_FULL_NAME =="COOPER PHYSICIANS OFFICES"] <- "Cooper IM"
AllPayers$PRACTICE_TEST[AllPayers$VEND_FULL_NAME =="COOPER PHYSICIAN OFFICES PA"] <- "Cooper IM"
AllPayers$PRACTICE_TEST[AllPayers$VEND_FULL_NAME =="Cooper_UHI_Nic"] <- "Cooper IM"
AllPayers$PRACTICE_TEST[AllPayers$VEND_FULL_NAME =="JEFFREY A KLEEMAN DO"] <- "Fairview"
AllPayers$PRACTICE_TEST[AllPayers$VEND_FULL_NAME =="LOURDES MEDICAL ASSOCIATES_CAMDEN"] <- "Osborn"
AllPayers$PRACTICE_TEST[AllPayers$VEND_FULL_NAME =="LOURDES MEDICAL ASSOCIATES_PENNSAUKEN"] <- "Lourdes Pediatrics"
AllPayers$PRACTICE_TEST[AllPayers$VEND_FULL_NAME =="OSBORN FAMILY PRACTICE_CAMDEN"] <- "Osborn"
AllPayers$PRACTICE_TEST[AllPayers$VEND_FULL_NAME =="PROJECT HOPE"] <- "Project Hope"
AllPayers$PRACTICE_TEST[AllPayers$VEND_FULL_NAME =="PROJECT HOPE HOMELESS PROGRAM"] <- "Project Hope"
AllPayers$PRACTICE_TEST[AllPayers$VEND_FULL_NAME =="RIVER PRIMARY CARE CENTER"] <- "Reliance River"
AllPayers$PRACTICE_TEST[AllPayers$VEND_FULL_NAME =="ST LUKE'S CATHOLIC MED  SVCS"] <- "St. Lukes"
AllPayers$PRACTICE_TEST[AllPayers$VEND_FULL_NAME =="ST LUKES CATHOLIC MEDICAL SERVICES INC"] <- "St. Lukes"
AllPayers$PRACTICE_TEST[AllPayers$VEND_FULL_NAME =="VIRTUA FAMILY MEDICINE-COOPER RIVER"] <- "Virtua"
AllPayers$PRACTICE_TEST[AllPayers$VEND_FULL_NAME =="VIRTUA MEDICAL GROUP"] <- "Virtua"
AllPayers$PRACTICE_TEST[AllPayers$VEND_FULL_NAME =="VIRTUA MEDICAL GROUP PA"] <- "Virtua"
head(AllPayers)
setdiff(AllPayers$PRACTICE, AllPayers$PRACTICE_TESET)
setdiff(AllPayers$PRACTICE, AllPayers$PRACTICE_TEST)
intersect(AllPayers$PRACTICE, AllPayers$PRACTICE_TEST)
source('~/.active-rstudio-document', echo=TRUE)
install.packages("readxl")
source('~/.active-rstudio-document', echo=TRUE)
getwd()
setwd("Y:/database/trackvia downloads/pra")
setwd("Y:/database/trackvia downloads/pra")
setwd("Y:/trackvia downloads/pra")
pra <- read_excel("pra.xls")
warnings(pra)
pra
head(pra)
help("na.omit")
na.omit(pra)
pra
DF <- data.frame(x = c(1, 2, 3), y = c(0, 10, NA))
DF
na.omit(DF)
is.na(pra)
if(is.na(pra), "")
help(if)
if(is.na(pra) ""
if(is.na(pra)) ""
if(is.na(pra))
''
pra[pra == NA] <- ""
pra
test <- pra[pra == NA] <- ""
test
rm(test)
df
DF
is.na(pra)
head(pra)
class(pra)
pra
util <- read.csv("utilization.csv")
getwd()
setwd("Y:/database")
getwd()
util <- read.csv("utilization.csv")
head(util)
duplicated(util$admission_id)
util[duplicated(util)]
util[duplicated(util$admission_id)]
util$admission_id[duplicated(util$admission_id)]
grep(duplicated(util$admission_id))
grep(util$admission_id[duplicated(util$admission_id)])
duplicated(util$admission_id)
util$dup <- duplicated(util$admission_id)
head(util)
subset(util$dup, dup == "TRUE")
subset(util, util$dup == "TRUE")
colnames(util)
util$dupes
util_dupes$admissionID
util_dupes$admission_id
util_dupes <- subset(util, util$dup == "TRUE")
util_dupes$admission_id
row.names(util_dupes)
util_dupes
any.duplicated(util$admission_id)
anyDuplicated(util$admission_id)
rownames(duplicated(util$admission_id, fromLast = F))
rownames(duplicated(util$admission_id, fromLast = T))
duplicated(util$admission_id, fromLast = T)
unique(util$admission_id)
count(unique(util$admission_id))
unique(util$admission_id)
length(unique(util$admission_id))
18603-18587
util_dupes
duplicated(util$admission_id) | duplicated(util$admission_id, fromLast = TRUE)
util$dup <- duplicated(util$admission_id) | duplicated(util$admission_id, fromLast = TRUE)
util_dupes <- subset(util, util$dup == "TRUE")
util_dupes$admission_id
colnames(util_dupes)
subset(util_dupes, util_dupes$inp6mo == "")
util_dupes$inp6mo[util_dupes$inp6mo == ""] <- NA
util_dupes
util_dupes[util_dupes$inp6mo == ""] <- NA
util <- read.csv("utilization.csv", na.strings = c("", "NA"))
util$dup <- duplicated(util$admission_id) | duplicated(util$admission_id, fromLast = TRUE)
# util$dup <- duplicated(util$admission_id)
# Subset duplicates
util_dupes <- subset(util, util$dup == "TRUE")
head(util_dupes)
na.omit(util_dupes$inp6mo)
util_dupes <- na.omit(util_dupes$inp6mo)
head(util_dupes)
util_dupes <- subset(util, util$dup == "TRUE")
util_dupes$inp6mo <- na.omit(util_dupes$inp6mo)
util_dupes
head(util_dupes$inp6mo)
tail(util_dupes$inp6mo)
length(util_dupes$inp6mo)
na.omit(util_dupes$inp6mo)
head(util)
util_dupes <- subset(util, util$dup == "TRUE", util_dupes$inp6mo)
head(util_dupes)
util <- read.csv("utilization.csv", na.strings = c("", "NA"))
util$dup <- duplicated(util$admission_id) | duplicated(util$admission_id, fromLast = TRUE)
util_dupes <- subset(util, util$dup == "TRUE")
subset(util_dupes, util_dupes$inp6mo > 0)
util_dupes <- subset(util, util$dup == "TRUE")
util_dupes <- subset(util_dupes, util_dupes$inp6mo == 0)
util <- read.csv("utilization.csv", na.strings = c("", "NA"))
# Get duplicates
util$dup <- duplicated(util$admission_id) | duplicated(util$admission_id, fromLast = TRUE)
# util$dup <- duplicated(util$admission_id)
# Subset duplicates
util_dupes <- subset(util, util$dup == "TRUE")
util_dupes$inp6mo
na.omit(util_dupes$inp6mo)
util_dupes <- na.omit(util_dupes$inp6mo)
util_dupes <- subset(util, util$dup == "TRUE")
util_dupes$inp6mo <- na.omit(util_dupes$inp6mo)
util_dupes$inp6mo
util$dup <- duplicated(util$admission_id) | duplicated(util$admission_id, fromLast = TRUE)
util_dupes <- subset(util, util$dup == "TRUE")
util_dupes$inp6mo <- na.exclude(util_dupes$inp6mo)
util_dupes$inp6mo
util_dupes <- subset(util, util$dup == "TRUE")
util_dupes$inp6mo
colnames(util_dupes)
complete.cases(util_dupes[,11])
complete.cases(util_dupes[,11],)
complete.cases(util_dupes[,11])
subset(util_dupes, complete.cases(util_dupes[,11]) == "TRUE")
util_dupes_complete <- subset(util_dupes, complete.cases(util_dupes[,11]) == "TRUE")
merge(util, util_dupes_complete)
merge(util, util_dupes_complete, by = "admission_id")
merge(util_dupes_complete, util, by = "admission_id")
subset(util_dupes, complete.cases(util_dupes[,11]) != "TRUE")
util_dupes_remove <- subset(util_dupes, complete.cases(util_dupes[,11]) != "TRUE")
util[util_dupes_remove,]
util[!util_dupes_remove,]
util[-util_dupes_remove,]
warnings()
util[-c(util_dupes_remove),]
util_dupes_remove
util[util_dupes_remove]
util[util_dupes_remove,]
util[,util_dupes_remove,]
rm(util_dupes_complete)
subset(util, util$inp6mo > 0)
subset(util, util$inp6mo > 0 | util$dup == "TRUE")
subset(util, util$dup == "FALSE" || util$inp6mo > 0 | util$dup == "TRUE")
158+18445
subset(util, util$dup == "FALSE" | util$inp6mo > 0 || util$dup == "TRUE")
util[!util_dupes_remove]
head(util_dupes_remove)
util[util_dupes_remove,]
util[util_dupes_remove]
util[,util_dupes_remove]
class(util)
class(util_dupes_remove)
?merge.data.frame
union(util, util_dupes_remove)
length(union(util, util_dupes_remove))
subset(util, !util_dupes_remove)
subset(util, util$dup == "FALSE" & (util$dup == "FALSE" & util$inp6mo > 0))
subset(util, util$dup == "FALSE" & (util$dup == "TRUE" & util$inp6mo > 0))
library(dplyr)
filter(util, util$dup == "TRUE")
left_join(util, util_dupes_remove)
left_join(util, util_dupes_remove, by = "admission_id")
18523+80
anti_join(util, util_dupes_remove, by = "admission_id")
18413+158
18603-16
anti_join(util, util_dupes_remove)
158+18429
util_csv$dup <- NULL
util_csv <- anti_join(util, util_dupes_remove)
util_csv$dup <- NULL
getwd()
write.csv(util_csv, "utilization", sep = "", row.names = F)
write.csv(util_csv, "utilization.csv", sep = "", row.names = F)
write.csv(util_csv, "utilization.csv", row.names = F)
util_csv[is.na(util_csv)] <- ""
util_csv
write.csv(util_csv, "utilization.csv", row.names = F, na = "")
na.omit(util_csv)
write.csv(util_csv, "utilization.csv", row.names = F, na.rm = T)
write.csv(util_csv, "utilization.csv", row.names = F)
write.csv(util_csv, "utilization.csv", row.names = F, NA = " ")
write.csv(util_csv, "utilization.csv", row.names = F, na = " ")
util <- read.csv("utilization.csv")
util$dup <- duplicated(util$admission_id) | duplicated(util$admission_id, fromLast = TRUE)
# util$dup <- duplicated(util$admission_id)
# Subset duplicates
util_dupes <- subset(util, util$dup == "TRUE")
# Selects rows where inp6mo are NA so they can be removed
util_dupes_remove <- subset(util_dupes, complete.cases(util_dupes[,11]) != "TRUE")
# Remove util_dupes_remove from util
util_csv <- anti_join(util, util_dupes_remove)
# Remove util$dup column
util_csv$dup <- NULL
# Write CSV
write.csv(util_csv, "utilization.csv", row.names = F)
library(readr)
install.packages("readr")
library(readr)
write_csv(util_csv, "utilization.csv", row.names = F)
?write_csv
write_csv(util_csv, "utilization.csv)
write_csv(util_csv, "utilization.csv")
write_csv(util_csv)
write_csv(util_csv, "utilization.csv")
as.Date(util_csv$deceased_date)
as.Date(util_csv$deceased_date, "%m/%d/%Y")
na.omit(as.Date(util_csv$deceased_date, "%m/%d/%Y"))
write.csv(util_csv, "utilization.csv", row.names = F, na = "")
filter(util, subscriber_id == "")
filter(util, subscriber_id == " ")
subset(util, util$subscriber_id == " ")
util_csv <- anti_join(util, sub)
util_csv <- anti_join(util_csv, sub)
sub
sub_id <- subset(util, util$subscriber_id == " ")
util_csv <- anti_join(util_csv, sub_id)
util_csv$dup <- NULL
# Write CSV
write.csv(util_csv, "utilization.csv", row.names = F, na = "")
